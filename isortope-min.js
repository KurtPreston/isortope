/*
* isortope v1.1
* Simple, animated JavaScript table sorting
*
* https://github.com/KurtPreston/isortope
*/// Convert cells for comparison
var isortopeNumToString=function(e){e=parseFloat(e)+450359962737;var t=40,n=e.toString(),r=Math.floor(Math.log(e)/Math.LN10);for(var i=r;i<t;i++)n="0"+n;return n},isortopeParseString=function(e){e=e.replace(/^\s+|\s+$/g,"");var t=e.split(" ")[0].replace(/[^a-zA-Z0-9\.-]/g,"");return isNaN(parseFloat(t))?e.toLowerCase():isortopeNumToString(t)},isortopeCellFilter=function(e){var t=$(e).text(),n=$(e).find("input"),r;return t!=""?r=isortopeParseString(t):n.length>0?n.val()=="on"?r=n.is(":checked").toString():r=isortopeParseString(n.val()):r=$(e).html(),r};jQuery.fn.contentChange=function(e){var t=jQuery(this);return t.each(function(t){var n=jQuery(this);n.data("lastContents",n.html()),window.watchContentChange=window.watchContentChange?window.watchContentChange:[],window.watchContentChange.push({element:n,callback:e})}),t},setInterval(function(){if(window.watchContentChange)for(i in window.watchContentChange)window.watchContentChange[i].element.data("lastContents")!=window.watchContentChange[i].element.html()&&(window.watchContentChange[i].callback.apply(window.watchContentChange[i].element),window.watchContentChange[i].element.data("lastContents",window.watchContentChange[i].element.html()))},500),function(e,t,n){"use strict";function r(t,n){this.$el=e(t),this.defaults={autoResort:!0,autoResortInput:!0,autoResortContent:!0},this.opts=e.extend(this.defaults,n,{autoResort:this.$el.data("isortope-autoresort"),autoResortInput:this.$el.data("isortope-autoresort-input"),autoResortContent:this.$el.data("isortope-autoresort-content")}),this.init()}e.fn.isortope=function(e){return this.each(function(){new r(this,e)})},r.prototype.init=function(){var t=this.$el;t.css("position","relative"),t.css("height",t.height());var n=t.find("th").length;for(var r=0;r<n;r++){var i=t.find("tr:first-child td:nth-child("+(r+1)+")").width();t.find("tr td:nth-child("+(r+1)+")").css("width",i);var s=t.find("th:nth-child("+(r+1)+")"),o=s.width();s.css("width",o),s.css("max-width",o)}var u={};for(var r=0;r<n;r++){var a="col"+r,f="return isortopeCellFilter(item.find('."+a+"'));",l=new Function("item",f);u[a]=l,t.find("tr td:nth-child("+(r+1)+")").addClass(a),t.find("tr td:nth-child("+(r+1)+")").data("sort-type",a),t.find("th:nth-child("+(r+1)+")").attr("data-sort-type",a)}t.find("tbody").isotope({itemSelector:"tr",layout:"fitRows",getSortData:u});var c=t.find("thead").height();t.find("tr").css("top",c);var s=t.find("th");s.css("cursor","pointer"),s.height(s.height()),s.css("line-height",1);var h=function(){var e=t.find("th.sortAsc,th.sortDesc");e.find(".sort-arrow").remove(),e.removeClass("sortAsc").removeClass("sortDesc")};t.find("th").click(function(){var n=e(this).attr("data-sort-type"),r;e(this).hasClass("sortAsc")?(r=!0,h(),e(this).html(e(this).html()+'<span class="sort-arrow">▼</span>'),e(this).addClass("sortDesc")):(r=!1,h(),e(this).html(e(this).html()+'<span class="sort-arrow">▲</span>'),e(this).addClass("sortAsc")),t.find("tbody").isotope({sortBy:n,sortAscending:!r}),t.trigger("sort")});var p=function(n){var r=e(n).closest("tr");t.find("tbody").isotope("updateSortData",r);var i=e(n).data("sort-type"),s=e("th[data-sort-type="+i+"]");if(s.hasClass("sortAsc")||s.hasClass("sortDesc"))t.find("tbody").isotope({sortBy:i}),t.trigger("sort")};this.opts.autoResort&&this.opts.autoResortInput&&t.find("input").change(function(){var t=e(this).parent("td");p(t)}),this.opts.autoResort&&this.opts.autoResortContent&&t.find("td").contentChange(function(){p(this)}),t.trigger("initialized")}}(jQuery,document,window),$(document).ready(function(){$("table.isortope").isortope()});